/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.content.targeting.analytics.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AnalyticsEvent service. Represents a row in the &quot;CT_Analytics_AnalyticsEvent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.content.targeting.analytics.model.impl.AnalyticsEventModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.content.targeting.analytics.model.impl.AnalyticsEventImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AnalyticsEvent
 * @see com.liferay.content.targeting.analytics.model.impl.AnalyticsEventImpl
 * @see com.liferay.content.targeting.analytics.model.impl.AnalyticsEventModelImpl
 * @generated
 */
public interface AnalyticsEventModel extends BaseModel<AnalyticsEvent> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a analytics event model instance should use the {@link AnalyticsEvent} interface instead.
	 */

	/**
	 * Returns the primary key of this analytics event.
	 *
	 * @return the primary key of this analytics event
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this analytics event.
	 *
	 * @param primaryKey the primary key of this analytics event
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the analytics event ID of this analytics event.
	 *
	 * @return the analytics event ID of this analytics event
	 */
	public long getAnalyticsEventId();

	/**
	 * Sets the analytics event ID of this analytics event.
	 *
	 * @param analyticsEventId the analytics event ID of this analytics event
	 */
	public void setAnalyticsEventId(long analyticsEventId);

	/**
	 * Returns the company ID of this analytics event.
	 *
	 * @return the company ID of this analytics event
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this analytics event.
	 *
	 * @param companyId the company ID of this analytics event
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this analytics event.
	 *
	 * @return the user ID of this analytics event
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this analytics event.
	 *
	 * @param userId the user ID of this analytics event
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this analytics event.
	 *
	 * @return the user uuid of this analytics event
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this analytics event.
	 *
	 * @param userUuid the user uuid of this analytics event
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the anonymous user ID of this analytics event.
	 *
	 * @return the anonymous user ID of this analytics event
	 */
	public long getAnonymousUserId();

	/**
	 * Sets the anonymous user ID of this analytics event.
	 *
	 * @param anonymousUserId the anonymous user ID of this analytics event
	 */
	public void setAnonymousUserId(long anonymousUserId);

	/**
	 * Returns the anonymous user uuid of this analytics event.
	 *
	 * @return the anonymous user uuid of this analytics event
	 * @throws SystemException if a system exception occurred
	 */
	public String getAnonymousUserUuid() throws SystemException;

	/**
	 * Sets the anonymous user uuid of this analytics event.
	 *
	 * @param anonymousUserUuid the anonymous user uuid of this analytics event
	 */
	public void setAnonymousUserUuid(String anonymousUserUuid);

	/**
	 * Returns the class name of this analytics event.
	 *
	 * @return the class name of this analytics event
	 */
	@AutoEscape
	public String getClassName();

	/**
	 * Sets the class name of this analytics event.
	 *
	 * @param className the class name of this analytics event
	 */
	public void setClassName(String className);

	/**
	 * Returns the class p k of this analytics event.
	 *
	 * @return the class p k of this analytics event
	 */
	public long getClassPK();

	/**
	 * Sets the class p k of this analytics event.
	 *
	 * @param classPK the class p k of this analytics event
	 */
	public void setClassPK(long classPK);

	/**
	 * Returns the element ID of this analytics event.
	 *
	 * @return the element ID of this analytics event
	 */
	@AutoEscape
	public String getElementId();

	/**
	 * Sets the element ID of this analytics event.
	 *
	 * @param elementId the element ID of this analytics event
	 */
	public void setElementId(String elementId);

	/**
	 * Returns the event type of this analytics event.
	 *
	 * @return the event type of this analytics event
	 */
	@AutoEscape
	public String getEventType();

	/**
	 * Sets the event type of this analytics event.
	 *
	 * @param eventType the event type of this analytics event
	 */
	public void setEventType(String eventType);

	/**
	 * Returns the client i p of this analytics event.
	 *
	 * @return the client i p of this analytics event
	 */
	@AutoEscape
	public String getClientIP();

	/**
	 * Sets the client i p of this analytics event.
	 *
	 * @param clientIP the client i p of this analytics event
	 */
	public void setClientIP(String clientIP);

	/**
	 * Returns the user agent of this analytics event.
	 *
	 * @return the user agent of this analytics event
	 */
	@AutoEscape
	public String getUserAgent();

	/**
	 * Sets the user agent of this analytics event.
	 *
	 * @param userAgent the user agent of this analytics event
	 */
	public void setUserAgent(String userAgent);

	/**
	 * Returns the language ID of this analytics event.
	 *
	 * @return the language ID of this analytics event
	 */
	@AutoEscape
	public String getLanguageId();

	/**
	 * Sets the language ID of this analytics event.
	 *
	 * @param languageId the language ID of this analytics event
	 */
	public void setLanguageId(String languageId);

	/**
	 * Returns the u r l of this analytics event.
	 *
	 * @return the u r l of this analytics event
	 */
	@AutoEscape
	public String getURL();

	/**
	 * Sets the u r l of this analytics event.
	 *
	 * @param URL the u r l of this analytics event
	 */
	public void setURL(String URL);

	/**
	 * Returns the additional info of this analytics event.
	 *
	 * @return the additional info of this analytics event
	 */
	@AutoEscape
	public String getAdditionalInfo();

	/**
	 * Sets the additional info of this analytics event.
	 *
	 * @param additionalInfo the additional info of this analytics event
	 */
	public void setAdditionalInfo(String additionalInfo);

	/**
	 * Returns the create date of this analytics event.
	 *
	 * @return the create date of this analytics event
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this analytics event.
	 *
	 * @param createDate the create date of this analytics event
	 */
	public void setCreateDate(Date createDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.liferay.content.targeting.analytics.model.AnalyticsEvent analyticsEvent);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.liferay.content.targeting.analytics.model.AnalyticsEvent> toCacheModel();

	@Override
	public com.liferay.content.targeting.analytics.model.AnalyticsEvent toEscapedModel();

	@Override
	public com.liferay.content.targeting.analytics.model.AnalyticsEvent toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}